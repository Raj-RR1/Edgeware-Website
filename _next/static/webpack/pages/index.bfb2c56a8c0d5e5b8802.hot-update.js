webpackHotUpdate_N_E("pages/index",{

/***/ "./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./node_modules/resolve-url-loader/index.js?!./node_modules/sass-loader/dist/cjs.js?!./components/common/icon-with-text/icon-with-text.module.scss":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ref--5-oneOf-3-1!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-3-2!./node_modules/resolve-url-loader??ref--5-oneOf-3-3!./node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-3-4!./components/common/icon-with-text/icon-with-text.module.scss ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.i, \".icon-with-text_wrapper__k-r_S {\\n  position: relative;\\n}\\n@media (min-width: 992px) {\\n  .icon-with-text_wrapper__k-r_S {\\n    padding: 1rem 0 1rem 5rem;\\n    margin: 0 0 2rem 0;\\n  }\\n}\\n\\n.icon-with-text_icon__2KHNk {\\n  display: block;\\n  border-radius: 100px;\\n  width: 66px;\\n  border: 7px solid rgba(255, 255, 255, 0.035);\\n  padding: 12px;\\n  margin: var(--spacing-m) auto;\\n  text-align: center;\\n}\\n.icon-with-text_icon__2KHNk svg {\\n  width: 24px;\\n  fill: var(--primary-500);\\n  margin-top: -3px;\\n}\\n@media (min-width: 992px) {\\n  .icon-with-text_icon__2KHNk {\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n    margin: 0;\\n  }\\n}\\n\\n.icon-with-text_headline__2XTQR {\\n  font-weight: var(--fw-semibold);\\n  font-size: var(--fs-text-xl);\\n  line-height: 1.5;\\n  letter-spacing: var(--ls-text--md);\\n  display: block;\\n  margin: 0 0 var(--spacing-xs) 0;\\n}\\n\\n.icon-with-text_content__3lKb- p {\\n  color: var(--grey-300);\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://icon-with-text.module.scss\",\"webpack://../../../node_modules/bootstrap/scss/mixins/_breakpoints.scss\"],\"names\":[],\"mappings\":\"AAEA;EACE,kBAAA;AADF;AC6DI;ED7DJ;IAII,yBAAA;IACA,kBAAA;EAAF;AACF;;AAGA;EACE,cAAA;EACA,oBAAA;EACA,WAAA;EACA,4CAAA;EACA,aAAA;EAEA,6BAAA;EACA,kBAAA;AADF;AAGE;EACE,WAAA;EACA,wBAAA;EACA,gBAAA;AADJ;ACwCI;EDpDJ;IAiBI,kBAAA;IACA,OAAA;IACA,MAAA;IACA,SAAA;EADF;AACF;;AAIA;EACE,+BAAA;EACA,4BAAA;EACA,gBAAA;EACA,kCAAA;EACA,cAAA;EACA,+BAAA;AADF;;AAKE;EACE,sBAAA;AAFJ\",\"sourcesContent\":[\"@import '../../../styles/custom.scss';\\n\\n.wrapper {\\n  position: relative;\\n\\n  @include media-breakpoint-up(lg) {\\n    padding: 1rem 0 1rem 5rem;\\n    margin: 0 0 2rem 0;\\n  }\\n}\\n\\n.icon {\\n  display: block;\\n  border-radius: 100px;\\n  width: 66px;\\n  border: 7px solid rgba(255,255,255,0.035);\\n  padding: 12px;\\n\\n  margin: var(--spacing-m) auto;\\n  text-align: center;\\n\\n  svg {\\n    width: 24px;\\n    fill: var(--primary-500);\\n    margin-top: -3px;\\n  }\\n\\n  @include media-breakpoint-up(lg) {\\n    position: absolute;\\n    left: 0;\\n    top: 0;\\n    margin: 0;\\n  }\\n}\\n\\n.headline {\\n  font-weight: var(--fw-semibold);\\n  font-size: var(--fs-text-xl);\\n  line-height: 1.5;\\n  letter-spacing: var(--ls-text--md);\\n  display: block;\\n  margin: 0 0 var(--spacing-xs) 0;\\n}\\n\\n.content {\\n  p {\\n    color: var(--grey-300);\\n  }\\n}\\n\",\"// Breakpoint viewport sizes and media queries.\\n//\\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\\n//\\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\\n//\\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\\n\\n// Name of the next breakpoint, or null for the last breakpoint.\\n//\\n//    >> breakpoint-next(sm)\\n//    md\\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\\n//    md\\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\\n//    md\\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\\n  $n: index($breakpoint-names, $name);\\n  @if not $n {\\n    @error \\\"breakpoint `#{$name}` not found in `#{$breakpoints}`\\\";\\n  }\\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\\n}\\n\\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\\n//\\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\\n//    576px\\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\\n  $min: map-get($breakpoints, $name);\\n  @return if($min != 0, $min, null);\\n}\\n\\n// Maximum breakpoint width.\\n// The maximum value is reduced by 0.02px to work around the limitations of\\n// `min-` and `max-` prefixes and viewports with fractional widths.\\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\\n//\\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\\n//    767.98px\\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\\n  $max: map-get($breakpoints, $name);\\n  @return if($max and $max > 0, $max - .02, null);\\n}\\n\\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\\n// Useful for making responsive utilities.\\n//\\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\\n//    \\\"\\\"  (Returns a blank string)\\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\\n//    \\\"-sm\\\"\\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\\n  @return if(breakpoint-min($name, $breakpoints) == null, \\\"\\\", \\\"-#{$name}\\\");\\n}\\n\\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\\n// Makes the @content apply to the given breakpoint and wider.\\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\\n  $min: breakpoint-min($name, $breakpoints);\\n  @if $min {\\n    @media (min-width: $min) {\\n      @content;\\n    }\\n  } @else {\\n    @content;\\n  }\\n}\\n\\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\\n// Makes the @content apply to the given breakpoint and narrower.\\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\\n  $max: breakpoint-max($name, $breakpoints);\\n  @if $max {\\n    @media (max-width: $max) {\\n      @content;\\n    }\\n  } @else {\\n    @content;\\n  }\\n}\\n\\n// Media that spans multiple breakpoint widths.\\n// Makes the @content apply between the min and max breakpoints\\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\\n  $min: breakpoint-min($lower, $breakpoints);\\n  $max: breakpoint-max($upper, $breakpoints);\\n\\n  @if $min != null and $max != null {\\n    @media (min-width: $min) and (max-width: $max) {\\n      @content;\\n    }\\n  } @else if $max == null {\\n    @include media-breakpoint-up($lower, $breakpoints) {\\n      @content;\\n    }\\n  } @else if $min == null {\\n    @include media-breakpoint-down($upper, $breakpoints) {\\n      @content;\\n    }\\n  }\\n}\\n\\n// Media between the breakpoint's minimum and maximum widths.\\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\\n  $min:  breakpoint-min($name, $breakpoints);\\n  $next: breakpoint-next($name, $breakpoints);\\n  $max:  breakpoint-max($next);\\n\\n  @if $min != null and $max != null {\\n    @media (min-width: $min) and (max-width: $max) {\\n      @content;\\n    }\\n  } @else if $max == null {\\n    @include media-breakpoint-up($name, $breakpoints) {\\n      @content;\\n    }\\n  } @else if $min == null {\\n    @include media-breakpoint-down($next, $breakpoints) {\\n      @content;\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"wrapper\": \"icon-with-text_wrapper__k-r_S\",\n\t\"icon\": \"icon-with-text_icon__2KHNk\",\n\t\"headline\": \"icon-with-text_headline__2XTQR\",\n\t\"content\": \"icon-with-text_content__3lKb-\"\n};\nmodule.exports = ___CSS_LOADER_EXPORT___;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./node_modules/resolve-url-loader/index.js?!./node_modules/sass-loader/dist/cjs.js?!./components/common/icon-with-text/icon-with-text.module.scss\n");

/***/ })

})