webpackHotUpdate_N_E("pages/index",{

/***/ "./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./node_modules/resolve-url-loader/index.js?!./node_modules/sass-loader/dist/cjs.js?!./components/pages/home/04_structure/structure.module.scss":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ref--5-oneOf-3-1!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ref--5-oneOf-3-2!./node_modules/resolve-url-loader??ref--5-oneOf-3-3!./node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-3-4!./components/pages/home/04_structure/structure.module.scss ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.i, \".structure_wrapper__3FFT_ {\\n  position: relative;\\n  padding: 100px 0 var(--spacing-l) 0;\\n  width: 100vw;\\n  margin-top: 0px;\\n}\\n@media (min-width: 992px) {\\n  .structure_wrapper__3FFT_ {\\n    padding: 100px 0 0;\\n    margin: 0 0 -50px 0;\\n  }\\n}\\n\\n.structure_treasuryModel__2KfS5 {\\n  position: relative;\\n  z-index: 1;\\n  height: auto;\\n  margin-bottom: var(--spacing-l);\\n}\\n@media (min-width: 768px) {\\n  .structure_treasuryModel__2KfS5 {\\n    height: 720px;\\n  }\\n}\\n@media (min-width: 992px) {\\n  .structure_treasuryModel__2KfS5 {\\n    height: 640px;\\n    margin-top: -60px;\\n  }\\n}\\n.structure_treasuryModel__2KfS5 svg, .structure_treasuryModel__2KfS5 img {\\n  max-width: 100%;\\n  height: auto;\\n}\\n.structure_treasuryModel__2KfS5 .structure_treasuryModelFull__1YFZz {\\n  opacity: 1;\\n  -moz-transition: 1s ease;\\n  transition: 1s ease;\\n}\\n@media (min-width: 992px) {\\n  .structure_treasuryModel__2KfS5 .structure_treasuryModelFull__1YFZz {\\n    opacity: 0;\\n  }\\n}\\n.structure_treasuryModel__2KfS5:hover .structure_treasuryModelFull__1YFZz {\\n  opacity: 1;\\n}\\n\\n.structure_treasuryModelSimple__48exC {\\n  display: none;\\n}\\n@media (min-width: 992px) {\\n  .structure_treasuryModelSimple__48exC {\\n    display: block;\\n  }\\n}\\n\\n.structure_treasuryModelSimple__48exC, .structure_treasuryModelFull__1YFZz {\\n  position: absolute;\\n  padding: var(--spacing-m) 0;\\n  margin: 0 -12px;\\n}\\n@media (min-width: 768px) {\\n  .structure_treasuryModelSimple__48exC, .structure_treasuryModelFull__1YFZz {\\n    padding: var(--spacing-l);\\n    margin: 0;\\n  }\\n}\\n@media (min-width: 992px) {\\n  .structure_treasuryModelSimple__48exC, .structure_treasuryModelFull__1YFZz {\\n    padding: var(--spacing-l);\\n  }\\n}\\n\\n.structure_bubbles__Qs7Yx {\\n  width: 100%;\\n}\\n\\n.structure_bigBubble__2Jw34 {\\n  position: absolute;\\n  z-index: 0;\\n  right: -250px;\\n  top: -300px;\\n}\\n@media (min-width: 992px) {\\n  .structure_bigBubble__2Jw34 {\\n    right: auto;\\n    left: -250px;\\n    top: -450px;\\n  }\\n}\\n.structure_bigBubble__2Jw34 svg {\\n  -webkit-transform: scale(0.7);\\n     -moz-transform: scale(0.7);\\n          transform: scale(0.7);\\n}\\n@media (min-width: 992px) {\\n  .structure_bigBubble__2Jw34 svg {\\n    -webkit-transform: scale(0.9);\\n       -moz-transform: scale(0.9);\\n            transform: scale(0.9);\\n  }\\n}\\n\\n.structure_mediumBubble__2SezJ {\\n  position: absolute;\\n  z-index: -1;\\n  right: -200px;\\n  bottom: 10px;\\n}\\n@media (min-width: 992px) {\\n  .structure_mediumBubble__2SezJ {\\n    right: -100px;\\n    bottom: auto;\\n    top: -350px;\\n  }\\n}\\n\\n.structure_smallBubble1__1tO4O {\\n  position: absolute;\\n  z-index: 0;\\n  top: 0%;\\n  left: -100px;\\n}\\n@media (min-width: 992px) {\\n  .structure_smallBubble1__1tO4O {\\n    top: -100px;\\n    left: auto;\\n    right: 30%;\\n    -webkit-transform: scale(0.6);\\n       -moz-transform: scale(0.6);\\n            transform: scale(0.6);\\n  }\\n}\\n.structure_smallBubble1__1tO4O svg {\\n  -webkit-transform: scale(0.75);\\n     -moz-transform: scale(0.75);\\n          transform: scale(0.75);\\n}\\n@media (min-width: 992px) {\\n  .structure_smallBubble1__1tO4O svg {\\n    -webkit-transform: scale(0.6);\\n       -moz-transform: scale(0.6);\\n            transform: scale(0.6);\\n  }\\n}\\n\\n.structure_smallBubble2__Pk4Ai {\\n  position: absolute;\\n  z-index: 1;\\n  top: 0%;\\n  left: -100px;\\n}\\n@media (min-width: 992px) {\\n  .structure_smallBubble2__Pk4Ai {\\n    top: auto;\\n    bottom: 0px;\\n    left: auto;\\n    right: -75px;\\n  }\\n}\\n@media (min-width: 992px) {\\n  .structure_smallBubble2__Pk4Ai svg {\\n    -webkit-transform: scale(0.6);\\n       -moz-transform: scale(0.6);\\n            transform: scale(0.6);\\n  }\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://structure.module.scss\",\"webpack://../../../../node_modules/bootstrap/scss/mixins/_breakpoints.scss\"],\"names\":[],\"mappings\":\"AAEA;EACE,kBAAA;EACA,mCAAA;EACA,YAAA;EAEA,eAAA;AAFF;AC0DI;ED7DJ;IAQI,kBAAA;IACA,mBAAA;EADF;AACF;;AAIA;EACE,kBAAA;EACA,UAAA;EACA,YAAA;EACA,+BAAA;AADF;AC6CI;EDhDJ;IAOI,aAAA;EAAF;AACF;ACwCI;EDhDJ;IAWI,aAAA;IACA,iBAAA;EACF;AACF;AACE;EACE,eAAA;EACA,YAAA;AACJ;AAEE;EACE,UAAA;EACA,wBAAA;EAAA,mBAAA;AAAJ;AC0BI;ED5BF;IAKI,UAAA;EACJ;AACF;AAGI;EACE,UAAA;AADN;;AAMA;EACE,aAAA;AAHF;ACcI;EDZJ;IAII,cAAA;EAFF;AACF;;AAKA;EACE,kBAAA;EACA,2BAAA;EACA,eAAA;AAFF;ACGI;EDJJ;IAMI,yBAAA;IACA,SAAA;EADF;AACF;ACHI;EDJJ;IAWI,yBAAA;EAAF;AACF;;AAGA;EACE,WAAA;AAAF;;AAIA;EACE,kBAAA;EACA,UAAA;EAEA,aAAA;EACA,WAAA;AAFF;ACnBI;EDgBJ;IAQI,WAAA;IACA,YAAA;IACA,WAAA;EADF;AACF;AAGE;EACE,6BAAA;KAAA,0BAAA;UAAA,qBAAA;AADJ;AC7BI;ED6BF;IAGI,6BAAA;OAAA,0BAAA;YAAA,qBAAA;EACJ;AACF;;AAGA;EACE,kBAAA;EACA,WAAA;EAEA,aAAA;EACA,YAAA;AADF;ACzCI;EDqCJ;IAQI,aAAA;IACA,YAAA;IACA,WAAA;EAAF;AACF;;AAGA;EACE,kBAAA;EACA,UAAA;EAEA,OAAA;EACA,YAAA;AADF;ACvDI;EDmDJ;IAQI,WAAA;IACA,UAAA;IACA,UAAA;IACA,6BAAA;OAAA,0BAAA;YAAA,qBAAA;EAAF;AACF;AAEE;EACE,8BAAA;KAAA,2BAAA;UAAA,sBAAA;AAAJ;AClEI;EDiEF;IAGI,6BAAA;OAAA,0BAAA;YAAA,qBAAA;EAEJ;AACF;;AAIA;EACE,kBAAA;EACA,UAAA;EAEA,OAAA;EACA,YAAA;AAFF;AC9EI;ED2EJ;IAQI,SAAA;IACA,WAAA;IACA,UAAA;IACA,YAAA;EADF;AACF;ACtFI;EDyFF;IAEI,6BAAA;OAAA,0BAAA;YAAA,qBAAA;EADJ;AACF\",\"sourcesContent\":[\"@import '../../../../styles/custom.scss';\\n\\n.wrapper {\\n  position: relative;\\n  padding: 100px 0 var(--spacing-l) 0;\\n  width: 100vw;\\n\\n  margin-top: 0px;\\n\\n  @include media-breakpoint-up(lg) {\\n    padding: 100px 0 0;\\n    margin: 0 0 -50px 0;\\n  }\\n}\\n\\n.treasuryModel {\\n  position: relative;\\n  z-index: 1;\\n  height: auto;\\n  margin-bottom: var(--spacing-l);\\n\\n  @include media-breakpoint-up(md) {\\n    height: 720px;\\n  }\\n\\n  @include media-breakpoint-up(lg) {\\n    height: 640px;\\n    margin-top: -60px;\\n  }\\n\\n  svg, img {\\n    max-width: 100%;\\n    height: auto;\\n  }\\n\\n  .treasuryModelFull {\\n    opacity: 1;\\n    transition: 1s ease;\\n\\n    @include media-breakpoint-up(lg) {\\n      opacity: 0;\\n    }\\n  }\\n\\n  &:hover {\\n    .treasuryModelFull {\\n      opacity: 1;\\n    }\\n  }\\n}\\n\\n.treasuryModelSimple {\\n  display: none;\\n\\n  @include media-breakpoint-up(lg) {\\n    display: block;\\n  }\\n}\\n\\n.treasuryModelSimple, .treasuryModelFull {\\n  position: absolute;\\n  padding: var(--spacing-m) 0;\\n  margin: 0 -12px;\\n\\n  @include media-breakpoint-up(md) {\\n    padding: var(--spacing-l);\\n    margin: 0;\\n  }\\n\\n  @include media-breakpoint-up(lg) {\\n    padding: var(--spacing-l);\\n  }\\n}\\n\\n.bubbles {\\n  width: 100%;\\n}\\n\\n\\n.bigBubble {\\n  position: absolute;\\n  z-index: 0;\\n\\n  right: -250px;\\n  top: -300px;\\n\\n  @include media-breakpoint-up(lg) {\\n    right: auto;\\n    left: -250px;\\n    top: -450px;\\n  }\\n\\n  svg {\\n    transform: scale(0.7);\\n    @include media-breakpoint-up(lg) {\\n      transform: scale(0.9);\\n    }\\n  }\\n}\\n\\n.mediumBubble {\\n  position: absolute;\\n  z-index: -1;\\n\\n  right: -200px;\\n  bottom: 10px;\\n\\n  @include media-breakpoint-up(lg) {\\n    right: -100px;\\n    bottom: auto;\\n    top: -350px;\\n  }\\n}\\n\\n.smallBubble1 {\\n  position: absolute;\\n  z-index: 0;\\n\\n  top: 0%;\\n  left: -100px;\\n\\n  @include media-breakpoint-up(lg) {\\n    top: -100px;\\n    left: auto;\\n    right: 30%;\\n    transform: scale(0.6);\\n  }\\n\\n  svg {\\n    transform: scale(0.75);\\n    @include media-breakpoint-up(lg) {\\n      transform: scale(0.6);\\n    }\\n  }\\n\\n\\n}\\n\\n.smallBubble2 {\\n  position: absolute;\\n  z-index: 1;\\n\\n  top: 0%;\\n  left: -100px;\\n\\n  @include media-breakpoint-up(lg) {\\n    top: auto;\\n    bottom: 0px;\\n    left: auto;\\n    right: -75px;\\n  }\\n\\n  svg {\\n    @include media-breakpoint-up(lg) {\\n      transform: scale(0.6);\\n    }\\n  }\\n}\\n\",\"// Breakpoint viewport sizes and media queries.\\n//\\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\\n//\\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\\n//\\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\\n\\n// Name of the next breakpoint, or null for the last breakpoint.\\n//\\n//    >> breakpoint-next(sm)\\n//    md\\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\\n//    md\\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\\n//    md\\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\\n  $n: index($breakpoint-names, $name);\\n  @if not $n {\\n    @error \\\"breakpoint `#{$name}` not found in `#{$breakpoints}`\\\";\\n  }\\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\\n}\\n\\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\\n//\\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\\n//    576px\\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\\n  $min: map-get($breakpoints, $name);\\n  @return if($min != 0, $min, null);\\n}\\n\\n// Maximum breakpoint width.\\n// The maximum value is reduced by 0.02px to work around the limitations of\\n// `min-` and `max-` prefixes and viewports with fractional widths.\\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\\n//\\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\\n//    767.98px\\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\\n  $max: map-get($breakpoints, $name);\\n  @return if($max and $max > 0, $max - .02, null);\\n}\\n\\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\\n// Useful for making responsive utilities.\\n//\\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\\n//    \\\"\\\"  (Returns a blank string)\\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\\n//    \\\"-sm\\\"\\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\\n  @return if(breakpoint-min($name, $breakpoints) == null, \\\"\\\", \\\"-#{$name}\\\");\\n}\\n\\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\\n// Makes the @content apply to the given breakpoint and wider.\\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\\n  $min: breakpoint-min($name, $breakpoints);\\n  @if $min {\\n    @media (min-width: $min) {\\n      @content;\\n    }\\n  } @else {\\n    @content;\\n  }\\n}\\n\\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\\n// Makes the @content apply to the given breakpoint and narrower.\\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\\n  $max: breakpoint-max($name, $breakpoints);\\n  @if $max {\\n    @media (max-width: $max) {\\n      @content;\\n    }\\n  } @else {\\n    @content;\\n  }\\n}\\n\\n// Media that spans multiple breakpoint widths.\\n// Makes the @content apply between the min and max breakpoints\\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\\n  $min: breakpoint-min($lower, $breakpoints);\\n  $max: breakpoint-max($upper, $breakpoints);\\n\\n  @if $min != null and $max != null {\\n    @media (min-width: $min) and (max-width: $max) {\\n      @content;\\n    }\\n  } @else if $max == null {\\n    @include media-breakpoint-up($lower, $breakpoints) {\\n      @content;\\n    }\\n  } @else if $min == null {\\n    @include media-breakpoint-down($upper, $breakpoints) {\\n      @content;\\n    }\\n  }\\n}\\n\\n// Media between the breakpoint's minimum and maximum widths.\\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\\n  $min:  breakpoint-min($name, $breakpoints);\\n  $next: breakpoint-next($name, $breakpoints);\\n  $max:  breakpoint-max($next);\\n\\n  @if $min != null and $max != null {\\n    @media (min-width: $min) and (max-width: $max) {\\n      @content;\\n    }\\n  } @else if $max == null {\\n    @include media-breakpoint-up($name, $breakpoints) {\\n      @content;\\n    }\\n  } @else if $min == null {\\n    @include media-breakpoint-down($next, $breakpoints) {\\n      @content;\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"wrapper\": \"structure_wrapper__3FFT_\",\n\t\"treasuryModel\": \"structure_treasuryModel__2KfS5\",\n\t\"treasuryModelFull\": \"structure_treasuryModelFull__1YFZz\",\n\t\"treasuryModelSimple\": \"structure_treasuryModelSimple__48exC\",\n\t\"bubbles\": \"structure_bubbles__Qs7Yx\",\n\t\"bigBubble\": \"structure_bigBubble__2Jw34\",\n\t\"mediumBubble\": \"structure_mediumBubble__2SezJ\",\n\t\"smallBubble1\": \"structure_smallBubble1__1tO4O\",\n\t\"smallBubble2\": \"structure_smallBubble2__Pk4Ai\"\n};\nmodule.exports = ___CSS_LOADER_EXPORT___;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/cjs.js?!./node_modules/resolve-url-loader/index.js?!./node_modules/sass-loader/dist/cjs.js?!./components/pages/home/04_structure/structure.module.scss\n");

/***/ })

})